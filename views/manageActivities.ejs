<!DOCTYPE html>
<html lang="en">

<%- include('./partials/head') %>
    <style>
        .container {
            direction: rtl;
        }

        h1 {
            margin: 0 auto;
        }

        #tagsContainer {
            display: flex;
            overflow-x: auto;
            white-space: nowrap;
            padding: 10px;
        }

        .tag-button {
            margin: 5px;
            background-color: #f8f9fa;
        }

        .tag-button.selected {
            background-color: black;
            color: white;
        }

        /* מיכל אופקי לתחנות */
        .places-container {
            display: flex;
            overflow-x: auto;
            padding: 10px;
            gap: 15px;
            /* ריווח בין התחנות */
        }

        /* עיצוב התחנה */
        .place-card {
            width: 200px;
            /* רוחב קטן יותר */
            height: 120px;
            /* גובה גדול יותר */
            background-color: #f8f9fa;
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 12px;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
        }

        /* כותרת התחנה */
        .place-card h6 {
            font-size: 16px;
            /* שם התחנה קטן יותר */
            margin: 0;
            padding: 0;
            text-align: center;
        }


        /* כפתור עריכה בצד ימין למטה */
        .place-card .edit-button {
            align-self: flex-end;
            margin-top: auto;
        }

        .place-card .edit-button:hover {
            color: white;
            background-color: black;
        }

        /* גלילה אופקית */
        .places-container::-webkit-scrollbar {
            height: 8px;
            /* גובה גלילה */
        }

        .places-container::-webkit-scrollbar-thumb {
            background-color: #888;
            /* צבע ידית גלילה */
            border-radius: 10px;
        }

        .places-container::-webkit-scrollbar-thumb:hover {
            background-color: #555;
            /* צבע ידית גלילה כשנוגעים */
        }

        /* #placesContainer {
            padding: 20px;
        } */

        /* .place-card {
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 10px;
            margin: 10px 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        } */


        #addPlaceBtn {
            margin: 15px auto;
            display: block;
            padding: 10px 20px;
            font-size: 18px;
            background-color: #f8f9fa;
            border: 5px solid black;
            color: black;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
        }

        #addPlaceBtn:hover {
            color: white;
            background-color: black;
            opacity: 80%;
        }
    </style>

    <body>
        <%- include('./partials/navbar', {currentPage: 'Manage Activities' }) %>
            <div class="container" style="max-width: 70%;">
                <h1 class="text-center">כל התחנות</h1>

                <div class="input-group mb-3" style="direction: ltr;">
                    <span class="input-group-text" id="search-addon">
                        <i class="fas fa-search"></i> <!-- אייקון חיפוש -->
                    </span>
                    <input type="text" id="searchInput" class="form-control" placeholder="חפש מקום..."
                        aria-label="חפש מקום" aria-describedby="search-addon" style="direction: rtl;">
                </div>


                <div id="tagsContainer" class="d-flex">
                    <!-- כאן יתווספו כפתורי התגיות -->
                </div>

                <div id="placesContainer">
                    <!-- הצגת התחנות -->
                </div>

                <button id="addPlaceBtn" onclick="window.location.href='/admin/add-new-activity'"> הוספת תחנה</button>

            </div>

            <script>
                $(document).ready(async function () {
                    loadTagsForCategory();

                    fetchAndFilterPlaces();
                });

                let selectedTags = [];

                async function loadTagsForCategory() {
                    try {
                        const response = await fetch('/api/v1/categories/search?name=סוג מתקן');
                        const categories = await response.json();

                        const categoryId = categories[0]._id;
                        if (categoryId) {
                            const tagsResponse = await fetch(`/api/v1/tags/category/${categoryId}`);
                            const tags = await tagsResponse.json();

                            const tagsContainer = $('#tagsContainer');
                            tagsContainer.empty();
                            tags.forEach(tag => {
                                const button = $(`<button class="tag-button btn btn-outline-dark mx-1" data-tag-id="${tag._id}">${tag.name}</button>`);

                                button.on('click', function () {
                                    const tagId = tag._id;
                                    if (selectedTags.includes(tagId)) {
                                        selectedTags = selectedTags.filter(id => id !== tagId);
                                        button.removeClass('selected');
                                    } else {
                                        selectedTags.push(tagId);
                                        button.addClass('selected');
                                    }
                                    fetchAndFilterPlaces();
                                    console.log('Selected Tags:', selectedTags);
                                });

                                tagsContainer.append(button);
                            });
                        } else {
                            console.error('קטגוריה לא נמצאה');
                        }
                    } catch (error) {
                        console.error('שגיאה במהלך שליפת הקטגוריות או התגיות:', error);
                    }
                }

                $('#searchInput').on('input', function () {
                    fetchAndFilterPlaces();
                });

                async function fetchAndFilterPlaces() {
                    try {
                        const response = await fetch('/api/v1/places');
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        const places = await response.json();

                        const searchQuery = $('#searchInput').val().toLowerCase();

                        if (selectedTags.length === 0 && searchQuery === '') {
                            displayPlaces(places);
                            return;
                        }

                        const filteredPlaces = places.filter(place => {
                            const matchesTag = selectedTags.length === 0 || place.tags.some(tag => selectedTags.includes(tag._id));
                            const matchesSearch = searchQuery === "" || place.name.toLowerCase().startsWith(searchQuery);

                            return matchesTag && matchesSearch;
                        });

                        displayPlaces(filteredPlaces);
                    } catch (error) {
                        console.error('Error fetching places:', error);
                    }
                }

                async function displayPlaces(places) {
                    const groupedPlaces = {};

                    places.forEach(place => {
                        //     place.tags.forEach(tag => {
                        //         if (!groupedPlaces[tag.name]) {
                        //             groupedPlaces[tag.name] = [];
                        //         }
                        //         groupedPlaces[tag.name].push(place);
                        //     });
                        if (place.tags.length === 0) {
                            if (!groupedPlaces['תחנות נוספות']) {
                                groupedPlaces['תחנות נוספות'] = [];
                            }
                            groupedPlaces['תחנות נוספות'].push(place);
                        } else {
                            place.tags.forEach(tag => {
                                if (!groupedPlaces[tag.name]) {
                                    groupedPlaces[tag.name] = [];
                                }
                                groupedPlaces[tag.name].push(place);
                            });
                        }

                    });

                    const container = $('#placesContainer');
                    container.empty();
                    const sortedTags = Object.keys(groupedPlaces).sort((a, b) => a.localeCompare(b));
                    sortedTags.forEach(tag => {
                    // for (const tag in groupedPlaces) {
                        const tagHeader = $('<h5>').text(tag);
                        container.append(tagHeader);

                        const placesContainer = $('<div class="places-container"></div>');

                        groupedPlaces[tag].forEach(place => {
                            const placeCard = $(`
                                <div class="place-card">
                                    <h6>${place.name}</h6>
                                    <button class="edit-button btn btn-outline-dark mb-2" onclick="window.location.href= '/admin/edit-activity?id=${place._id}'">
                                                            <i class="fas fa-edit"></i>
                                                        </button>
                                </div>
                            `);

                            placesContainer.append(placeCard);
                        });
                        container.append(placesContainer);
                    })
                }

            </script>
    </body>

</html>